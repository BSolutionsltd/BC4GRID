// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  password         String?
  emailVerified    DateTime?
  image            String?
  isAdmin          Boolean   @default(false)
  isVerified       Boolean   @default(false)  
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  smartMeterSN     String?   @unique // New field for smart meter serial number  
  energyReadings   EnergyReading[]
  accounts         Account[]
  sessions         Session[]
}

model EnergyReading {
  id               String    @id @default(cuid())
  smartMeterSN     String
  accumulatedEnergy Float?   @default(0.0)
  timestamp        DateTime @default(now())  
  user             User     @relation(fields: [smartMeterSN], references: [smartMeterSN])

  @@index([smartMeterSN])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}